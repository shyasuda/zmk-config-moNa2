#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 6

&mkp_input_listener { input-processors = <&zip_temp_layer MOUSE 10000>; };

&mt {
    flavor = "balanced";
    quick-tap-ms = <250>;
};

&lt {
    flavor = "balanced";
    quick-tap-ms = <250>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2 3>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        exit_AML: exit_AML {
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings = <&tog_off MOUSE>;
            label = "exit_AML";
        };

        kp_exit_AML: kp_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER &exit_AML>;
            label = "KP_exit_AML";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };

        tog_off: toggle_layer_off {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };

        mt_hp: mod_tap_hold_preferred {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <250>;
            display-name = "Mod-Tap Hold Preferred";
        };

        lt_hp: layer_tap_hold_preferred {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;

            quick-tap-ms = <250>;
            display-name = "Layer-Tap Hold Preferred";
        };

        mt_exit_AML_on_tap: mt_exit_AML_on_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_exit_AML_ON_TAP";
            bindings = <&kp>, <&kp_exit_AML>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            quick-tap-ms = <250>;
        };

        mt_exit_AML_on_tap_hp: mt_exit_AML_on_tap_hp {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_exit_AML_ON_TAP_HP";
            bindings = <&kp>, <&kp_exit_AML>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
            quick-tap-ms = <250>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt 6 Q                           &kp W         &kp E                                       &kp R                                      &kp T                                                                                                    &kp Y           &kp U  &kp I        &kp O              &kp P
&kp A                             &kp S         &lt 2 D                                     &kp F                                      &kp G           &trans                                     &kp BACKSPACE                                 &kp H           &kp J  &kp K        &kp L              &mt_exit_AML_on_tap RIGHT_COMMAND MINUS
&mt_exit_AML_on_tap LEFT_SHIFT Z  &kp X         &kp C                                       &kp V                                      &kp B           &lt 4 TAB                                  &kp DELETE                                    &kp N           &kp M  &lt 5 COMMA  &mt RIGHT_ALT DOT  &mt_exit_AML_on_tap RIGHT_SHIFT SLASH
&kp CAPSLOCK                      &kp LEFT_ALT  &mt_exit_AML_on_tap_hp LEFT_CONTROL ESCAPE  &mt_exit_AML_on_tap_hp LEFT_COMMAND LANG2  &lt_hp 5 SPACE  &mt_exit_AML_on_tap_hp LEFT_SHIFT LANG1    &mt_exit_AML_on_tap_hp RIGHT_SHIFT BACKSPACE  &lt_hp 1 ENTER                                         &mt_exit_AML_on_tap_hp RIGHT_CONTROL ESCAPE
            >;

            sensor-bindings =
                <&scroll_up_down>,
                <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        layer_1 {
            bindings = <
&kp ESCAPE          &kp LS(LG(LEFT_BRACKET))  &kp UP_ARROW    &kp LS(LG(RIGHT_BRACKET))  &kp LC(UP_ARROW)                             &kp C_MUTE       &trans                &kp PAGE_UP           &kp RA(RG(BACKSLASH))               &trans
&kp LG(LEFT_ARROW)  &kp LEFT_ARROW            &kp DOWN_ARROW  &kp RIGHT_ARROW            &kp LG(RIGHT_ARROW)  &trans    &kp C_BRI_UP  &kp C_VOLUME_UP  &kp HOME              &kp PAGE_DOWN         &kp END                             &kp RIGHT_COMMAND
&kp LEFT_SHIFT      &kp LG(LEFT_BRACKET)      &trans          &kp LG(RIGHT_BRACKET)      &kp LC(DOWN_ARROW)   &trans    &kp C_BRI_DN  &kp C_VOL_DN     &kp LS(LG(NUMBER_3))  &kp LS(LG(NUMBER_4))  &mt RIGHT_ALT LS(LG(RS(NUMBER_5)))  &kp RIGHT_SHIFT
&trans              &trans                    &trans          &trans                     &trans               &trans    &trans        &trans                                                                                           &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                   &kp SINGLE_QUOTE   &kp TILDE      &kp EQUAL  &kp PIPE                &kp GRAVE
&trans  &trans  &trans  &trans  &trans                &trans    &trans   &kp DOUBLE_QUOTES  &kp SEMICOLON  &kp COLON  &kp LEFT_BRACKET        &mt RIGHT_COMMAND RIGHT_BRACKET
&trans  &trans  &trans  &trans  &trans                &trans    &trans   &kp BACKSLASH      &kp MINUS      &kp PLUS   &mt RIGHT_ALT ASTERISK  &trans
&trans  &trans  &trans  &trans  &kp LC(LEFT_COMMAND)  &trans    &kp TAB  &trans                                                               &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                           &kp SLASH                &kp N7        &kp N8        &kp NUMBER_9  &kp MINUS
&trans  &trans  &trans  &trans  &trans  &trans    &trans         &kp ASTERISK             &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS
&trans  &trans  &trans  &trans  &trans  &trans    &trans         &kp NUMBER_0             &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD
&trans  &trans  &trans  &trans  &trans  &trans    &kp BACKSPACE  &mt RIGHT_COMMAND ENTER                                            &kp EQUAL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                              &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans         &trans       &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans         &trans       &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &bootloader    &bootloader  &trans                                                  &bt BT_CLR_ALL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_5 {
            bindings = <
&kp NUMBER_1                       &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                        &kp NUMBER_6   &kp NUMBER_7   &kp NUMBER_8  &kp NUMBER_9          &kp NUMBER_0
&mt LEFT_CONTROL EXCLAMATION       &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT   &trans     &trans     &kp CARET      &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &mt RIGHT_COMMAND RIGHT_PARENTHESIS
&mt_exit_AML_on_tap LEFT_SHIFT F1  &kp F2        &kp F3        &kp F4        &kp F5        &kp F11    &kp F12    &kp F6         &kp F7         &kp F8        &mt RIGHT_ALT F9      &mt_exit_AML_on_tap RIGHT_SHIFT F10
&trans                             &trans        &trans        &trans        &trans        &trans     &kp SPACE  &kp BACKSPACE                                                     &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &mkp MB1  &trans  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                              &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };
};
